# AIRFLOW__CORE__PARALLELISM = AIRFLOW__CELERY__WORKER_CONCURRENCY * (number of worker nodes)
version: '3.7'
x-refs:
  airflowconf: &airflowconf
    image: airflow-local:latest
    build:
      context: .
      target: development
    environment:
      AIRFLOW_DB_URL: postgres://postgres:postgres@postgres:5432/airflow_db
      # AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__PARALLELISM: 32
      AIRFLOW__CORE__FERNET_KEY: 6POSHuBdIEDgo84mVFOVNIizisy27sNdHqlXWXUufLA=
      AIRFLOW__WEBSERVER__SECRET_KEY: 'U\xb5\xcc\xd8\xd2\xb3q\xb2\xcd QZ\x15n\xe7\xb9'
      AIRFLOW__WEBSERVER__NAVBAR_COLOR: '#000000'
      # AIRFLOW__CELERY__WORKER_CONCURRENCY: 16
      # AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/1
      AWS_PROFILE: ${AWS_PROFILE}
    volumes:
      - ${HOME}/.aws:/root/.aws
      - .:/opt
      - airflow-log:/var/log/airflow
    depends_on:
      - postgres
services:
  init:
    <<: *airflowconf
    command: airflow db init
    restart: on-failure
  webserver:
    <<: *airflowconf
    command: airflow webserver -p 8080
    ports:
      - 8080:8080
    restart: always
  scheduler:
    <<: *airflowconf
    command: airflow scheduler
    restart: always
  # worker:
  #   <<: *airflowconf
  #   command: airflow celery worker
  #   restart: always
  # redis:
  #   image: redis:6.0-alpine
  #   ports:
  #     - 6379:6379
  #   restart: always
  postgres:
    image: postgres:11.6-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: airflow_db
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
    ports:
      - 5432:5432
    volumes:
      - pg-data:/var/lib/postgresql
    restart: always
networks:
  default:
    name: docker-airflow-net
volumes:
  airflow-log:
  pg-data:
